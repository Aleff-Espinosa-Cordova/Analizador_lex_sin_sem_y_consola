Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> declaraciones
Rule 1     declaraciones -> declaracion declaraciones
Rule 2     declaraciones -> declaracion
Rule 3     declaracion -> VAR VARIABLE igual NUMERO Punto_y_coma
Rule 4     declaracion -> VAR VARIABLE igual expresion_parentesis Punto_y_coma
Rule 5     declaracion -> VAR VARIABLE igual TRUE Punto_y_coma
Rule 6     declaracion -> VAR VARIABLE igual FALSE Punto_y_coma
Rule 7     declaracion -> IF NUMERO Mayor_que NUMERO Dos_puntos declaraciones
Rule 8     declaracion -> IF NUMERO Menor_que NUMERO Dos_puntos declaraciones
Rule 9     declaracion -> IF NUMERO Menor_o_igual NUMERO Dos_puntos declaraciones
Rule 10    declaracion -> IF NUMERO Mayor_o_igual NUMERO Dos_puntos declaraciones
Rule 11    declaracion -> IF NUMERO igual_igual NUMERO Dos_puntos declaraciones
Rule 12    declaracion -> FOR VARIABLE IN RANGE Parentesis_apertura NUMERO Parentesis_final Dos_puntos declaraciones
Rule 13    declaracion -> PRINT Parentesis_apertura expresion_parentesis Parentesis_final Punto_y_coma
Rule 14    expresion_parentesis -> COMILLA variables COMILLA
Rule 15    expresion_parentesis -> variables
Rule 16    variables -> VARIABLE
Rule 17    variables -> NUMERO
Rule 18    variables -> variables VARIABLE
Rule 19    variables -> variables NUMERO
Rule 20    declaracion -> VARIABLE Parentesis_apertura Parentesis_final Punto_y_coma
Rule 21    declaracion -> VARIABLE Parentesis_apertura parametros Parentesis_final Punto_y_coma
Rule 22    declaracion -> DEF VARIABLE Parentesis_apertura parametros Parentesis_final Dos_puntos declaraciones
Rule 23    declaracion -> DEF VARIABLE Parentesis_apertura Parentesis_final Dos_puntos
Rule 24    parametros -> expresion
Rule 25    parametros -> expresion coma parametros
Rule 26    expresion -> NUMERO
Rule 27    expresion -> VARIABLE

Terminals, with rules where they appear

COMILLA              : 14 14
DEF                  : 22 23
Dos_puntos           : 7 8 9 10 11 12 22 23
FALSE                : 6
FOR                  : 12
IF                   : 7 8 9 10 11
IN                   : 12
Mayor_o_igual        : 10
Mayor_que            : 7
Menor_o_igual        : 9
Menor_que            : 8
NUMERO               : 3 7 7 8 8 9 9 10 10 11 11 12 17 19 26
PRINT                : 13
Parentesis_apertura  : 12 13 20 21 22 23
Parentesis_final     : 12 13 20 21 22 23
Punto_y_coma         : 3 4 5 6 13 20 21
RANGE                : 12
TRUE                 : 5
VAR                  : 3 4 5 6
VARIABLE             : 3 4 5 6 12 16 18 20 21 22 23 27
coma                 : 25
error                : 
igual                : 3 4 5 6
igual_igual          : 11

Nonterminals, with rules where they appear

declaracion          : 1 2
declaraciones        : 1 7 8 9 10 11 12 22 0
expresion            : 24 25
expresion_parentesis : 4 13
parametros           : 21 22 25
variables            : 14 15 18 19

Parsing method: LALR

state 0

    (0) S' -> . declaraciones
    (1) declaraciones -> . declaracion declaraciones
    (2) declaraciones -> . declaracion
    (3) declaracion -> . VAR VARIABLE igual NUMERO Punto_y_coma
    (4) declaracion -> . VAR VARIABLE igual expresion_parentesis Punto_y_coma
    (5) declaracion -> . VAR VARIABLE igual TRUE Punto_y_coma
    (6) declaracion -> . VAR VARIABLE igual FALSE Punto_y_coma
    (7) declaracion -> . IF NUMERO Mayor_que NUMERO Dos_puntos declaraciones
    (8) declaracion -> . IF NUMERO Menor_que NUMERO Dos_puntos declaraciones
    (9) declaracion -> . IF NUMERO Menor_o_igual NUMERO Dos_puntos declaraciones
    (10) declaracion -> . IF NUMERO Mayor_o_igual NUMERO Dos_puntos declaraciones
    (11) declaracion -> . IF NUMERO igual_igual NUMERO Dos_puntos declaraciones
    (12) declaracion -> . FOR VARIABLE IN RANGE Parentesis_apertura NUMERO Parentesis_final Dos_puntos declaraciones
    (13) declaracion -> . PRINT Parentesis_apertura expresion_parentesis Parentesis_final Punto_y_coma
    (20) declaracion -> . VARIABLE Parentesis_apertura Parentesis_final Punto_y_coma
    (21) declaracion -> . VARIABLE Parentesis_apertura parametros Parentesis_final Punto_y_coma
    (22) declaracion -> . DEF VARIABLE Parentesis_apertura parametros Parentesis_final Dos_puntos declaraciones
    (23) declaracion -> . DEF VARIABLE Parentesis_apertura Parentesis_final Dos_puntos

    VAR             shift and go to state 3
    IF              shift and go to state 5
    FOR             shift and go to state 6
    PRINT           shift and go to state 7
    VARIABLE        shift and go to state 4
    DEF             shift and go to state 8

    declaraciones                  shift and go to state 1
    declaracion                    shift and go to state 2

state 1

    (0) S' -> declaraciones .



state 2

    (1) declaraciones -> declaracion . declaraciones
    (2) declaraciones -> declaracion .
    (1) declaraciones -> . declaracion declaraciones
    (2) declaraciones -> . declaracion
    (3) declaracion -> . VAR VARIABLE igual NUMERO Punto_y_coma
    (4) declaracion -> . VAR VARIABLE igual expresion_parentesis Punto_y_coma
    (5) declaracion -> . VAR VARIABLE igual TRUE Punto_y_coma
    (6) declaracion -> . VAR VARIABLE igual FALSE Punto_y_coma
    (7) declaracion -> . IF NUMERO Mayor_que NUMERO Dos_puntos declaraciones
    (8) declaracion -> . IF NUMERO Menor_que NUMERO Dos_puntos declaraciones
    (9) declaracion -> . IF NUMERO Menor_o_igual NUMERO Dos_puntos declaraciones
    (10) declaracion -> . IF NUMERO Mayor_o_igual NUMERO Dos_puntos declaraciones
    (11) declaracion -> . IF NUMERO igual_igual NUMERO Dos_puntos declaraciones
    (12) declaracion -> . FOR VARIABLE IN RANGE Parentesis_apertura NUMERO Parentesis_final Dos_puntos declaraciones
    (13) declaracion -> . PRINT Parentesis_apertura expresion_parentesis Parentesis_final Punto_y_coma
    (20) declaracion -> . VARIABLE Parentesis_apertura Parentesis_final Punto_y_coma
    (21) declaracion -> . VARIABLE Parentesis_apertura parametros Parentesis_final Punto_y_coma
    (22) declaracion -> . DEF VARIABLE Parentesis_apertura parametros Parentesis_final Dos_puntos declaraciones
    (23) declaracion -> . DEF VARIABLE Parentesis_apertura Parentesis_final Dos_puntos

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
    $end            reduce using rule 2 (declaraciones -> declaracion .)
    VAR             shift and go to state 3
    IF              shift and go to state 5
    FOR             shift and go to state 6
    PRINT           shift and go to state 7
    VARIABLE        shift and go to state 4
    DEF             shift and go to state 8

  ! VAR             [ reduce using rule 2 (declaraciones -> declaracion .) ]
  ! IF              [ reduce using rule 2 (declaraciones -> declaracion .) ]
  ! FOR             [ reduce using rule 2 (declaraciones -> declaracion .) ]
  ! PRINT           [ reduce using rule 2 (declaraciones -> declaracion .) ]
  ! VARIABLE        [ reduce using rule 2 (declaraciones -> declaracion .) ]
  ! DEF             [ reduce using rule 2 (declaraciones -> declaracion .) ]

    declaracion                    shift and go to state 2
    declaraciones                  shift and go to state 9

state 3

    (3) declaracion -> VAR . VARIABLE igual NUMERO Punto_y_coma
    (4) declaracion -> VAR . VARIABLE igual expresion_parentesis Punto_y_coma
    (5) declaracion -> VAR . VARIABLE igual TRUE Punto_y_coma
    (6) declaracion -> VAR . VARIABLE igual FALSE Punto_y_coma

    VARIABLE        shift and go to state 10


state 4

    (20) declaracion -> VARIABLE . Parentesis_apertura Parentesis_final Punto_y_coma
    (21) declaracion -> VARIABLE . Parentesis_apertura parametros Parentesis_final Punto_y_coma

    Parentesis_apertura shift and go to state 11


state 5

    (7) declaracion -> IF . NUMERO Mayor_que NUMERO Dos_puntos declaraciones
    (8) declaracion -> IF . NUMERO Menor_que NUMERO Dos_puntos declaraciones
    (9) declaracion -> IF . NUMERO Menor_o_igual NUMERO Dos_puntos declaraciones
    (10) declaracion -> IF . NUMERO Mayor_o_igual NUMERO Dos_puntos declaraciones
    (11) declaracion -> IF . NUMERO igual_igual NUMERO Dos_puntos declaraciones

    NUMERO          shift and go to state 12


state 6

    (12) declaracion -> FOR . VARIABLE IN RANGE Parentesis_apertura NUMERO Parentesis_final Dos_puntos declaraciones

    VARIABLE        shift and go to state 13


state 7

    (13) declaracion -> PRINT . Parentesis_apertura expresion_parentesis Parentesis_final Punto_y_coma

    Parentesis_apertura shift and go to state 14


state 8

    (22) declaracion -> DEF . VARIABLE Parentesis_apertura parametros Parentesis_final Dos_puntos declaraciones
    (23) declaracion -> DEF . VARIABLE Parentesis_apertura Parentesis_final Dos_puntos

    VARIABLE        shift and go to state 15


state 9

    (1) declaraciones -> declaracion declaraciones .

    $end            reduce using rule 1 (declaraciones -> declaracion declaraciones .)
    VAR             reduce using rule 1 (declaraciones -> declaracion declaraciones .)
    IF              reduce using rule 1 (declaraciones -> declaracion declaraciones .)
    FOR             reduce using rule 1 (declaraciones -> declaracion declaraciones .)
    PRINT           reduce using rule 1 (declaraciones -> declaracion declaraciones .)
    VARIABLE        reduce using rule 1 (declaraciones -> declaracion declaraciones .)
    DEF             reduce using rule 1 (declaraciones -> declaracion declaraciones .)


state 10

    (3) declaracion -> VAR VARIABLE . igual NUMERO Punto_y_coma
    (4) declaracion -> VAR VARIABLE . igual expresion_parentesis Punto_y_coma
    (5) declaracion -> VAR VARIABLE . igual TRUE Punto_y_coma
    (6) declaracion -> VAR VARIABLE . igual FALSE Punto_y_coma

    igual           shift and go to state 16


state 11

    (20) declaracion -> VARIABLE Parentesis_apertura . Parentesis_final Punto_y_coma
    (21) declaracion -> VARIABLE Parentesis_apertura . parametros Parentesis_final Punto_y_coma
    (24) parametros -> . expresion
    (25) parametros -> . expresion coma parametros
    (26) expresion -> . NUMERO
    (27) expresion -> . VARIABLE

    Parentesis_final shift and go to state 18
    NUMERO          shift and go to state 21
    VARIABLE        shift and go to state 17

    parametros                     shift and go to state 19
    expresion                      shift and go to state 20

state 12

    (7) declaracion -> IF NUMERO . Mayor_que NUMERO Dos_puntos declaraciones
    (8) declaracion -> IF NUMERO . Menor_que NUMERO Dos_puntos declaraciones
    (9) declaracion -> IF NUMERO . Menor_o_igual NUMERO Dos_puntos declaraciones
    (10) declaracion -> IF NUMERO . Mayor_o_igual NUMERO Dos_puntos declaraciones
    (11) declaracion -> IF NUMERO . igual_igual NUMERO Dos_puntos declaraciones

    Mayor_que       shift and go to state 22
    Menor_que       shift and go to state 23
    Menor_o_igual   shift and go to state 24
    Mayor_o_igual   shift and go to state 25
    igual_igual     shift and go to state 26


state 13

    (12) declaracion -> FOR VARIABLE . IN RANGE Parentesis_apertura NUMERO Parentesis_final Dos_puntos declaraciones

    IN              shift and go to state 27


state 14

    (13) declaracion -> PRINT Parentesis_apertura . expresion_parentesis Parentesis_final Punto_y_coma
    (14) expresion_parentesis -> . COMILLA variables COMILLA
    (15) expresion_parentesis -> . variables
    (16) variables -> . VARIABLE
    (17) variables -> . NUMERO
    (18) variables -> . variables VARIABLE
    (19) variables -> . variables NUMERO

    COMILLA         shift and go to state 29
    VARIABLE        shift and go to state 31
    NUMERO          shift and go to state 32

    expresion_parentesis           shift and go to state 28
    variables                      shift and go to state 30

state 15

    (22) declaracion -> DEF VARIABLE . Parentesis_apertura parametros Parentesis_final Dos_puntos declaraciones
    (23) declaracion -> DEF VARIABLE . Parentesis_apertura Parentesis_final Dos_puntos

    Parentesis_apertura shift and go to state 33


state 16

    (3) declaracion -> VAR VARIABLE igual . NUMERO Punto_y_coma
    (4) declaracion -> VAR VARIABLE igual . expresion_parentesis Punto_y_coma
    (5) declaracion -> VAR VARIABLE igual . TRUE Punto_y_coma
    (6) declaracion -> VAR VARIABLE igual . FALSE Punto_y_coma
    (14) expresion_parentesis -> . COMILLA variables COMILLA
    (15) expresion_parentesis -> . variables
    (16) variables -> . VARIABLE
    (17) variables -> . NUMERO
    (18) variables -> . variables VARIABLE
    (19) variables -> . variables NUMERO

    NUMERO          shift and go to state 34
    TRUE            shift and go to state 36
    FALSE           shift and go to state 37
    COMILLA         shift and go to state 29
    VARIABLE        shift and go to state 31

    expresion_parentesis           shift and go to state 35
    variables                      shift and go to state 30

state 17

    (27) expresion -> VARIABLE .

    coma            reduce using rule 27 (expresion -> VARIABLE .)
    Parentesis_final reduce using rule 27 (expresion -> VARIABLE .)


state 18

    (20) declaracion -> VARIABLE Parentesis_apertura Parentesis_final . Punto_y_coma

    Punto_y_coma    shift and go to state 38


state 19

    (21) declaracion -> VARIABLE Parentesis_apertura parametros . Parentesis_final Punto_y_coma

    Parentesis_final shift and go to state 39


state 20

    (24) parametros -> expresion .
    (25) parametros -> expresion . coma parametros

    Parentesis_final reduce using rule 24 (parametros -> expresion .)
    coma            shift and go to state 40


state 21

    (26) expresion -> NUMERO .

    coma            reduce using rule 26 (expresion -> NUMERO .)
    Parentesis_final reduce using rule 26 (expresion -> NUMERO .)


state 22

    (7) declaracion -> IF NUMERO Mayor_que . NUMERO Dos_puntos declaraciones

    NUMERO          shift and go to state 41


state 23

    (8) declaracion -> IF NUMERO Menor_que . NUMERO Dos_puntos declaraciones

    NUMERO          shift and go to state 42


state 24

    (9) declaracion -> IF NUMERO Menor_o_igual . NUMERO Dos_puntos declaraciones

    NUMERO          shift and go to state 43


state 25

    (10) declaracion -> IF NUMERO Mayor_o_igual . NUMERO Dos_puntos declaraciones

    NUMERO          shift and go to state 44


state 26

    (11) declaracion -> IF NUMERO igual_igual . NUMERO Dos_puntos declaraciones

    NUMERO          shift and go to state 45


state 27

    (12) declaracion -> FOR VARIABLE IN . RANGE Parentesis_apertura NUMERO Parentesis_final Dos_puntos declaraciones

    RANGE           shift and go to state 46


state 28

    (13) declaracion -> PRINT Parentesis_apertura expresion_parentesis . Parentesis_final Punto_y_coma

    Parentesis_final shift and go to state 47


state 29

    (14) expresion_parentesis -> COMILLA . variables COMILLA
    (16) variables -> . VARIABLE
    (17) variables -> . NUMERO
    (18) variables -> . variables VARIABLE
    (19) variables -> . variables NUMERO

    VARIABLE        shift and go to state 31
    NUMERO          shift and go to state 32

    variables                      shift and go to state 48

state 30

    (15) expresion_parentesis -> variables .
    (18) variables -> variables . VARIABLE
    (19) variables -> variables . NUMERO

    Parentesis_final reduce using rule 15 (expresion_parentesis -> variables .)
    Punto_y_coma    reduce using rule 15 (expresion_parentesis -> variables .)
    VARIABLE        shift and go to state 49
    NUMERO          shift and go to state 50


state 31

    (16) variables -> VARIABLE .

    VARIABLE        reduce using rule 16 (variables -> VARIABLE .)
    NUMERO          reduce using rule 16 (variables -> VARIABLE .)
    Parentesis_final reduce using rule 16 (variables -> VARIABLE .)
    Punto_y_coma    reduce using rule 16 (variables -> VARIABLE .)
    COMILLA         reduce using rule 16 (variables -> VARIABLE .)


state 32

    (17) variables -> NUMERO .

    VARIABLE        reduce using rule 17 (variables -> NUMERO .)
    NUMERO          reduce using rule 17 (variables -> NUMERO .)
    Parentesis_final reduce using rule 17 (variables -> NUMERO .)
    COMILLA         reduce using rule 17 (variables -> NUMERO .)


state 33

    (22) declaracion -> DEF VARIABLE Parentesis_apertura . parametros Parentesis_final Dos_puntos declaraciones
    (23) declaracion -> DEF VARIABLE Parentesis_apertura . Parentesis_final Dos_puntos
    (24) parametros -> . expresion
    (25) parametros -> . expresion coma parametros
    (26) expresion -> . NUMERO
    (27) expresion -> . VARIABLE

    Parentesis_final shift and go to state 52
    NUMERO          shift and go to state 21
    VARIABLE        shift and go to state 17

    parametros                     shift and go to state 51
    expresion                      shift and go to state 20

state 34

    (3) declaracion -> VAR VARIABLE igual NUMERO . Punto_y_coma
    (17) variables -> NUMERO .

  ! shift/reduce conflict for Punto_y_coma resolved as shift
    Punto_y_coma    shift and go to state 53
    VARIABLE        reduce using rule 17 (variables -> NUMERO .)
    NUMERO          reduce using rule 17 (variables -> NUMERO .)

  ! Punto_y_coma    [ reduce using rule 17 (variables -> NUMERO .) ]


state 35

    (4) declaracion -> VAR VARIABLE igual expresion_parentesis . Punto_y_coma

    Punto_y_coma    shift and go to state 54


state 36

    (5) declaracion -> VAR VARIABLE igual TRUE . Punto_y_coma

    Punto_y_coma    shift and go to state 55


state 37

    (6) declaracion -> VAR VARIABLE igual FALSE . Punto_y_coma

    Punto_y_coma    shift and go to state 56


state 38

    (20) declaracion -> VARIABLE Parentesis_apertura Parentesis_final Punto_y_coma .

    VAR             reduce using rule 20 (declaracion -> VARIABLE Parentesis_apertura Parentesis_final Punto_y_coma .)
    IF              reduce using rule 20 (declaracion -> VARIABLE Parentesis_apertura Parentesis_final Punto_y_coma .)
    FOR             reduce using rule 20 (declaracion -> VARIABLE Parentesis_apertura Parentesis_final Punto_y_coma .)
    PRINT           reduce using rule 20 (declaracion -> VARIABLE Parentesis_apertura Parentesis_final Punto_y_coma .)
    VARIABLE        reduce using rule 20 (declaracion -> VARIABLE Parentesis_apertura Parentesis_final Punto_y_coma .)
    DEF             reduce using rule 20 (declaracion -> VARIABLE Parentesis_apertura Parentesis_final Punto_y_coma .)
    $end            reduce using rule 20 (declaracion -> VARIABLE Parentesis_apertura Parentesis_final Punto_y_coma .)


state 39

    (21) declaracion -> VARIABLE Parentesis_apertura parametros Parentesis_final . Punto_y_coma

    Punto_y_coma    shift and go to state 57


state 40

    (25) parametros -> expresion coma . parametros
    (24) parametros -> . expresion
    (25) parametros -> . expresion coma parametros
    (26) expresion -> . NUMERO
    (27) expresion -> . VARIABLE

    NUMERO          shift and go to state 21
    VARIABLE        shift and go to state 17

    expresion                      shift and go to state 20
    parametros                     shift and go to state 58

state 41

    (7) declaracion -> IF NUMERO Mayor_que NUMERO . Dos_puntos declaraciones

    Dos_puntos      shift and go to state 59


state 42

    (8) declaracion -> IF NUMERO Menor_que NUMERO . Dos_puntos declaraciones

    Dos_puntos      shift and go to state 60


state 43

    (9) declaracion -> IF NUMERO Menor_o_igual NUMERO . Dos_puntos declaraciones

    Dos_puntos      shift and go to state 61


state 44

    (10) declaracion -> IF NUMERO Mayor_o_igual NUMERO . Dos_puntos declaraciones

    Dos_puntos      shift and go to state 62


state 45

    (11) declaracion -> IF NUMERO igual_igual NUMERO . Dos_puntos declaraciones

    Dos_puntos      shift and go to state 63


state 46

    (12) declaracion -> FOR VARIABLE IN RANGE . Parentesis_apertura NUMERO Parentesis_final Dos_puntos declaraciones

    Parentesis_apertura shift and go to state 64


state 47

    (13) declaracion -> PRINT Parentesis_apertura expresion_parentesis Parentesis_final . Punto_y_coma

    Punto_y_coma    shift and go to state 65


state 48

    (14) expresion_parentesis -> COMILLA variables . COMILLA
    (18) variables -> variables . VARIABLE
    (19) variables -> variables . NUMERO

    COMILLA         shift and go to state 66
    VARIABLE        shift and go to state 49
    NUMERO          shift and go to state 50


state 49

    (18) variables -> variables VARIABLE .

    VARIABLE        reduce using rule 18 (variables -> variables VARIABLE .)
    NUMERO          reduce using rule 18 (variables -> variables VARIABLE .)
    Parentesis_final reduce using rule 18 (variables -> variables VARIABLE .)
    Punto_y_coma    reduce using rule 18 (variables -> variables VARIABLE .)
    COMILLA         reduce using rule 18 (variables -> variables VARIABLE .)


state 50

    (19) variables -> variables NUMERO .

    VARIABLE        reduce using rule 19 (variables -> variables NUMERO .)
    NUMERO          reduce using rule 19 (variables -> variables NUMERO .)
    Parentesis_final reduce using rule 19 (variables -> variables NUMERO .)
    Punto_y_coma    reduce using rule 19 (variables -> variables NUMERO .)
    COMILLA         reduce using rule 19 (variables -> variables NUMERO .)


state 51

    (22) declaracion -> DEF VARIABLE Parentesis_apertura parametros . Parentesis_final Dos_puntos declaraciones

    Parentesis_final shift and go to state 67


state 52

    (23) declaracion -> DEF VARIABLE Parentesis_apertura Parentesis_final . Dos_puntos

    Dos_puntos      shift and go to state 68


state 53

    (3) declaracion -> VAR VARIABLE igual NUMERO Punto_y_coma .

    VAR             reduce using rule 3 (declaracion -> VAR VARIABLE igual NUMERO Punto_y_coma .)
    IF              reduce using rule 3 (declaracion -> VAR VARIABLE igual NUMERO Punto_y_coma .)
    FOR             reduce using rule 3 (declaracion -> VAR VARIABLE igual NUMERO Punto_y_coma .)
    PRINT           reduce using rule 3 (declaracion -> VAR VARIABLE igual NUMERO Punto_y_coma .)
    VARIABLE        reduce using rule 3 (declaracion -> VAR VARIABLE igual NUMERO Punto_y_coma .)
    DEF             reduce using rule 3 (declaracion -> VAR VARIABLE igual NUMERO Punto_y_coma .)
    $end            reduce using rule 3 (declaracion -> VAR VARIABLE igual NUMERO Punto_y_coma .)


state 54

    (4) declaracion -> VAR VARIABLE igual expresion_parentesis Punto_y_coma .

    VAR             reduce using rule 4 (declaracion -> VAR VARIABLE igual expresion_parentesis Punto_y_coma .)
    IF              reduce using rule 4 (declaracion -> VAR VARIABLE igual expresion_parentesis Punto_y_coma .)
    FOR             reduce using rule 4 (declaracion -> VAR VARIABLE igual expresion_parentesis Punto_y_coma .)
    PRINT           reduce using rule 4 (declaracion -> VAR VARIABLE igual expresion_parentesis Punto_y_coma .)
    VARIABLE        reduce using rule 4 (declaracion -> VAR VARIABLE igual expresion_parentesis Punto_y_coma .)
    DEF             reduce using rule 4 (declaracion -> VAR VARIABLE igual expresion_parentesis Punto_y_coma .)
    $end            reduce using rule 4 (declaracion -> VAR VARIABLE igual expresion_parentesis Punto_y_coma .)


state 55

    (5) declaracion -> VAR VARIABLE igual TRUE Punto_y_coma .

    VAR             reduce using rule 5 (declaracion -> VAR VARIABLE igual TRUE Punto_y_coma .)
    IF              reduce using rule 5 (declaracion -> VAR VARIABLE igual TRUE Punto_y_coma .)
    FOR             reduce using rule 5 (declaracion -> VAR VARIABLE igual TRUE Punto_y_coma .)
    PRINT           reduce using rule 5 (declaracion -> VAR VARIABLE igual TRUE Punto_y_coma .)
    VARIABLE        reduce using rule 5 (declaracion -> VAR VARIABLE igual TRUE Punto_y_coma .)
    DEF             reduce using rule 5 (declaracion -> VAR VARIABLE igual TRUE Punto_y_coma .)
    $end            reduce using rule 5 (declaracion -> VAR VARIABLE igual TRUE Punto_y_coma .)


state 56

    (6) declaracion -> VAR VARIABLE igual FALSE Punto_y_coma .

    VAR             reduce using rule 6 (declaracion -> VAR VARIABLE igual FALSE Punto_y_coma .)
    IF              reduce using rule 6 (declaracion -> VAR VARIABLE igual FALSE Punto_y_coma .)
    FOR             reduce using rule 6 (declaracion -> VAR VARIABLE igual FALSE Punto_y_coma .)
    PRINT           reduce using rule 6 (declaracion -> VAR VARIABLE igual FALSE Punto_y_coma .)
    VARIABLE        reduce using rule 6 (declaracion -> VAR VARIABLE igual FALSE Punto_y_coma .)
    DEF             reduce using rule 6 (declaracion -> VAR VARIABLE igual FALSE Punto_y_coma .)
    $end            reduce using rule 6 (declaracion -> VAR VARIABLE igual FALSE Punto_y_coma .)


state 57

    (21) declaracion -> VARIABLE Parentesis_apertura parametros Parentesis_final Punto_y_coma .

    VAR             reduce using rule 21 (declaracion -> VARIABLE Parentesis_apertura parametros Parentesis_final Punto_y_coma .)
    IF              reduce using rule 21 (declaracion -> VARIABLE Parentesis_apertura parametros Parentesis_final Punto_y_coma .)
    FOR             reduce using rule 21 (declaracion -> VARIABLE Parentesis_apertura parametros Parentesis_final Punto_y_coma .)
    PRINT           reduce using rule 21 (declaracion -> VARIABLE Parentesis_apertura parametros Parentesis_final Punto_y_coma .)
    VARIABLE        reduce using rule 21 (declaracion -> VARIABLE Parentesis_apertura parametros Parentesis_final Punto_y_coma .)
    DEF             reduce using rule 21 (declaracion -> VARIABLE Parentesis_apertura parametros Parentesis_final Punto_y_coma .)
    $end            reduce using rule 21 (declaracion -> VARIABLE Parentesis_apertura parametros Parentesis_final Punto_y_coma .)


state 58

    (25) parametros -> expresion coma parametros .

    Parentesis_final reduce using rule 25 (parametros -> expresion coma parametros .)


state 59

    (7) declaracion -> IF NUMERO Mayor_que NUMERO Dos_puntos . declaraciones
    (1) declaraciones -> . declaracion declaraciones
    (2) declaraciones -> . declaracion
    (3) declaracion -> . VAR VARIABLE igual NUMERO Punto_y_coma
    (4) declaracion -> . VAR VARIABLE igual expresion_parentesis Punto_y_coma
    (5) declaracion -> . VAR VARIABLE igual TRUE Punto_y_coma
    (6) declaracion -> . VAR VARIABLE igual FALSE Punto_y_coma
    (7) declaracion -> . IF NUMERO Mayor_que NUMERO Dos_puntos declaraciones
    (8) declaracion -> . IF NUMERO Menor_que NUMERO Dos_puntos declaraciones
    (9) declaracion -> . IF NUMERO Menor_o_igual NUMERO Dos_puntos declaraciones
    (10) declaracion -> . IF NUMERO Mayor_o_igual NUMERO Dos_puntos declaraciones
    (11) declaracion -> . IF NUMERO igual_igual NUMERO Dos_puntos declaraciones
    (12) declaracion -> . FOR VARIABLE IN RANGE Parentesis_apertura NUMERO Parentesis_final Dos_puntos declaraciones
    (13) declaracion -> . PRINT Parentesis_apertura expresion_parentesis Parentesis_final Punto_y_coma
    (20) declaracion -> . VARIABLE Parentesis_apertura Parentesis_final Punto_y_coma
    (21) declaracion -> . VARIABLE Parentesis_apertura parametros Parentesis_final Punto_y_coma
    (22) declaracion -> . DEF VARIABLE Parentesis_apertura parametros Parentesis_final Dos_puntos declaraciones
    (23) declaracion -> . DEF VARIABLE Parentesis_apertura Parentesis_final Dos_puntos

    VAR             shift and go to state 3
    IF              shift and go to state 5
    FOR             shift and go to state 6
    PRINT           shift and go to state 7
    VARIABLE        shift and go to state 4
    DEF             shift and go to state 8

    declaraciones                  shift and go to state 69
    declaracion                    shift and go to state 2

state 60

    (8) declaracion -> IF NUMERO Menor_que NUMERO Dos_puntos . declaraciones
    (1) declaraciones -> . declaracion declaraciones
    (2) declaraciones -> . declaracion
    (3) declaracion -> . VAR VARIABLE igual NUMERO Punto_y_coma
    (4) declaracion -> . VAR VARIABLE igual expresion_parentesis Punto_y_coma
    (5) declaracion -> . VAR VARIABLE igual TRUE Punto_y_coma
    (6) declaracion -> . VAR VARIABLE igual FALSE Punto_y_coma
    (7) declaracion -> . IF NUMERO Mayor_que NUMERO Dos_puntos declaraciones
    (8) declaracion -> . IF NUMERO Menor_que NUMERO Dos_puntos declaraciones
    (9) declaracion -> . IF NUMERO Menor_o_igual NUMERO Dos_puntos declaraciones
    (10) declaracion -> . IF NUMERO Mayor_o_igual NUMERO Dos_puntos declaraciones
    (11) declaracion -> . IF NUMERO igual_igual NUMERO Dos_puntos declaraciones
    (12) declaracion -> . FOR VARIABLE IN RANGE Parentesis_apertura NUMERO Parentesis_final Dos_puntos declaraciones
    (13) declaracion -> . PRINT Parentesis_apertura expresion_parentesis Parentesis_final Punto_y_coma
    (20) declaracion -> . VARIABLE Parentesis_apertura Parentesis_final Punto_y_coma
    (21) declaracion -> . VARIABLE Parentesis_apertura parametros Parentesis_final Punto_y_coma
    (22) declaracion -> . DEF VARIABLE Parentesis_apertura parametros Parentesis_final Dos_puntos declaraciones
    (23) declaracion -> . DEF VARIABLE Parentesis_apertura Parentesis_final Dos_puntos

    VAR             shift and go to state 3
    IF              shift and go to state 5
    FOR             shift and go to state 6
    PRINT           shift and go to state 7
    VARIABLE        shift and go to state 4
    DEF             shift and go to state 8

    declaraciones                  shift and go to state 70
    declaracion                    shift and go to state 2

state 61

    (9) declaracion -> IF NUMERO Menor_o_igual NUMERO Dos_puntos . declaraciones
    (1) declaraciones -> . declaracion declaraciones
    (2) declaraciones -> . declaracion
    (3) declaracion -> . VAR VARIABLE igual NUMERO Punto_y_coma
    (4) declaracion -> . VAR VARIABLE igual expresion_parentesis Punto_y_coma
    (5) declaracion -> . VAR VARIABLE igual TRUE Punto_y_coma
    (6) declaracion -> . VAR VARIABLE igual FALSE Punto_y_coma
    (7) declaracion -> . IF NUMERO Mayor_que NUMERO Dos_puntos declaraciones
    (8) declaracion -> . IF NUMERO Menor_que NUMERO Dos_puntos declaraciones
    (9) declaracion -> . IF NUMERO Menor_o_igual NUMERO Dos_puntos declaraciones
    (10) declaracion -> . IF NUMERO Mayor_o_igual NUMERO Dos_puntos declaraciones
    (11) declaracion -> . IF NUMERO igual_igual NUMERO Dos_puntos declaraciones
    (12) declaracion -> . FOR VARIABLE IN RANGE Parentesis_apertura NUMERO Parentesis_final Dos_puntos declaraciones
    (13) declaracion -> . PRINT Parentesis_apertura expresion_parentesis Parentesis_final Punto_y_coma
    (20) declaracion -> . VARIABLE Parentesis_apertura Parentesis_final Punto_y_coma
    (21) declaracion -> . VARIABLE Parentesis_apertura parametros Parentesis_final Punto_y_coma
    (22) declaracion -> . DEF VARIABLE Parentesis_apertura parametros Parentesis_final Dos_puntos declaraciones
    (23) declaracion -> . DEF VARIABLE Parentesis_apertura Parentesis_final Dos_puntos

    VAR             shift and go to state 3
    IF              shift and go to state 5
    FOR             shift and go to state 6
    PRINT           shift and go to state 7
    VARIABLE        shift and go to state 4
    DEF             shift and go to state 8

    declaraciones                  shift and go to state 71
    declaracion                    shift and go to state 2

state 62

    (10) declaracion -> IF NUMERO Mayor_o_igual NUMERO Dos_puntos . declaraciones
    (1) declaraciones -> . declaracion declaraciones
    (2) declaraciones -> . declaracion
    (3) declaracion -> . VAR VARIABLE igual NUMERO Punto_y_coma
    (4) declaracion -> . VAR VARIABLE igual expresion_parentesis Punto_y_coma
    (5) declaracion -> . VAR VARIABLE igual TRUE Punto_y_coma
    (6) declaracion -> . VAR VARIABLE igual FALSE Punto_y_coma
    (7) declaracion -> . IF NUMERO Mayor_que NUMERO Dos_puntos declaraciones
    (8) declaracion -> . IF NUMERO Menor_que NUMERO Dos_puntos declaraciones
    (9) declaracion -> . IF NUMERO Menor_o_igual NUMERO Dos_puntos declaraciones
    (10) declaracion -> . IF NUMERO Mayor_o_igual NUMERO Dos_puntos declaraciones
    (11) declaracion -> . IF NUMERO igual_igual NUMERO Dos_puntos declaraciones
    (12) declaracion -> . FOR VARIABLE IN RANGE Parentesis_apertura NUMERO Parentesis_final Dos_puntos declaraciones
    (13) declaracion -> . PRINT Parentesis_apertura expresion_parentesis Parentesis_final Punto_y_coma
    (20) declaracion -> . VARIABLE Parentesis_apertura Parentesis_final Punto_y_coma
    (21) declaracion -> . VARIABLE Parentesis_apertura parametros Parentesis_final Punto_y_coma
    (22) declaracion -> . DEF VARIABLE Parentesis_apertura parametros Parentesis_final Dos_puntos declaraciones
    (23) declaracion -> . DEF VARIABLE Parentesis_apertura Parentesis_final Dos_puntos

    VAR             shift and go to state 3
    IF              shift and go to state 5
    FOR             shift and go to state 6
    PRINT           shift and go to state 7
    VARIABLE        shift and go to state 4
    DEF             shift and go to state 8

    declaraciones                  shift and go to state 72
    declaracion                    shift and go to state 2

state 63

    (11) declaracion -> IF NUMERO igual_igual NUMERO Dos_puntos . declaraciones
    (1) declaraciones -> . declaracion declaraciones
    (2) declaraciones -> . declaracion
    (3) declaracion -> . VAR VARIABLE igual NUMERO Punto_y_coma
    (4) declaracion -> . VAR VARIABLE igual expresion_parentesis Punto_y_coma
    (5) declaracion -> . VAR VARIABLE igual TRUE Punto_y_coma
    (6) declaracion -> . VAR VARIABLE igual FALSE Punto_y_coma
    (7) declaracion -> . IF NUMERO Mayor_que NUMERO Dos_puntos declaraciones
    (8) declaracion -> . IF NUMERO Menor_que NUMERO Dos_puntos declaraciones
    (9) declaracion -> . IF NUMERO Menor_o_igual NUMERO Dos_puntos declaraciones
    (10) declaracion -> . IF NUMERO Mayor_o_igual NUMERO Dos_puntos declaraciones
    (11) declaracion -> . IF NUMERO igual_igual NUMERO Dos_puntos declaraciones
    (12) declaracion -> . FOR VARIABLE IN RANGE Parentesis_apertura NUMERO Parentesis_final Dos_puntos declaraciones
    (13) declaracion -> . PRINT Parentesis_apertura expresion_parentesis Parentesis_final Punto_y_coma
    (20) declaracion -> . VARIABLE Parentesis_apertura Parentesis_final Punto_y_coma
    (21) declaracion -> . VARIABLE Parentesis_apertura parametros Parentesis_final Punto_y_coma
    (22) declaracion -> . DEF VARIABLE Parentesis_apertura parametros Parentesis_final Dos_puntos declaraciones
    (23) declaracion -> . DEF VARIABLE Parentesis_apertura Parentesis_final Dos_puntos

    VAR             shift and go to state 3
    IF              shift and go to state 5
    FOR             shift and go to state 6
    PRINT           shift and go to state 7
    VARIABLE        shift and go to state 4
    DEF             shift and go to state 8

    declaraciones                  shift and go to state 73
    declaracion                    shift and go to state 2

state 64

    (12) declaracion -> FOR VARIABLE IN RANGE Parentesis_apertura . NUMERO Parentesis_final Dos_puntos declaraciones

    NUMERO          shift and go to state 74


state 65

    (13) declaracion -> PRINT Parentesis_apertura expresion_parentesis Parentesis_final Punto_y_coma .

    VAR             reduce using rule 13 (declaracion -> PRINT Parentesis_apertura expresion_parentesis Parentesis_final Punto_y_coma .)
    IF              reduce using rule 13 (declaracion -> PRINT Parentesis_apertura expresion_parentesis Parentesis_final Punto_y_coma .)
    FOR             reduce using rule 13 (declaracion -> PRINT Parentesis_apertura expresion_parentesis Parentesis_final Punto_y_coma .)
    PRINT           reduce using rule 13 (declaracion -> PRINT Parentesis_apertura expresion_parentesis Parentesis_final Punto_y_coma .)
    VARIABLE        reduce using rule 13 (declaracion -> PRINT Parentesis_apertura expresion_parentesis Parentesis_final Punto_y_coma .)
    DEF             reduce using rule 13 (declaracion -> PRINT Parentesis_apertura expresion_parentesis Parentesis_final Punto_y_coma .)
    $end            reduce using rule 13 (declaracion -> PRINT Parentesis_apertura expresion_parentesis Parentesis_final Punto_y_coma .)


state 66

    (14) expresion_parentesis -> COMILLA variables COMILLA .

    Parentesis_final reduce using rule 14 (expresion_parentesis -> COMILLA variables COMILLA .)
    Punto_y_coma    reduce using rule 14 (expresion_parentesis -> COMILLA variables COMILLA .)


state 67

    (22) declaracion -> DEF VARIABLE Parentesis_apertura parametros Parentesis_final . Dos_puntos declaraciones

    Dos_puntos      shift and go to state 75


state 68

    (23) declaracion -> DEF VARIABLE Parentesis_apertura Parentesis_final Dos_puntos .

    VAR             reduce using rule 23 (declaracion -> DEF VARIABLE Parentesis_apertura Parentesis_final Dos_puntos .)
    IF              reduce using rule 23 (declaracion -> DEF VARIABLE Parentesis_apertura Parentesis_final Dos_puntos .)
    FOR             reduce using rule 23 (declaracion -> DEF VARIABLE Parentesis_apertura Parentesis_final Dos_puntos .)
    PRINT           reduce using rule 23 (declaracion -> DEF VARIABLE Parentesis_apertura Parentesis_final Dos_puntos .)
    VARIABLE        reduce using rule 23 (declaracion -> DEF VARIABLE Parentesis_apertura Parentesis_final Dos_puntos .)
    DEF             reduce using rule 23 (declaracion -> DEF VARIABLE Parentesis_apertura Parentesis_final Dos_puntos .)
    $end            reduce using rule 23 (declaracion -> DEF VARIABLE Parentesis_apertura Parentesis_final Dos_puntos .)


state 69

    (7) declaracion -> IF NUMERO Mayor_que NUMERO Dos_puntos declaraciones .

    VAR             reduce using rule 7 (declaracion -> IF NUMERO Mayor_que NUMERO Dos_puntos declaraciones .)
    IF              reduce using rule 7 (declaracion -> IF NUMERO Mayor_que NUMERO Dos_puntos declaraciones .)
    FOR             reduce using rule 7 (declaracion -> IF NUMERO Mayor_que NUMERO Dos_puntos declaraciones .)
    PRINT           reduce using rule 7 (declaracion -> IF NUMERO Mayor_que NUMERO Dos_puntos declaraciones .)
    VARIABLE        reduce using rule 7 (declaracion -> IF NUMERO Mayor_que NUMERO Dos_puntos declaraciones .)
    DEF             reduce using rule 7 (declaracion -> IF NUMERO Mayor_que NUMERO Dos_puntos declaraciones .)
    $end            reduce using rule 7 (declaracion -> IF NUMERO Mayor_que NUMERO Dos_puntos declaraciones .)


state 70

    (8) declaracion -> IF NUMERO Menor_que NUMERO Dos_puntos declaraciones .

    VAR             reduce using rule 8 (declaracion -> IF NUMERO Menor_que NUMERO Dos_puntos declaraciones .)
    IF              reduce using rule 8 (declaracion -> IF NUMERO Menor_que NUMERO Dos_puntos declaraciones .)
    FOR             reduce using rule 8 (declaracion -> IF NUMERO Menor_que NUMERO Dos_puntos declaraciones .)
    PRINT           reduce using rule 8 (declaracion -> IF NUMERO Menor_que NUMERO Dos_puntos declaraciones .)
    VARIABLE        reduce using rule 8 (declaracion -> IF NUMERO Menor_que NUMERO Dos_puntos declaraciones .)
    DEF             reduce using rule 8 (declaracion -> IF NUMERO Menor_que NUMERO Dos_puntos declaraciones .)
    $end            reduce using rule 8 (declaracion -> IF NUMERO Menor_que NUMERO Dos_puntos declaraciones .)


state 71

    (9) declaracion -> IF NUMERO Menor_o_igual NUMERO Dos_puntos declaraciones .

    VAR             reduce using rule 9 (declaracion -> IF NUMERO Menor_o_igual NUMERO Dos_puntos declaraciones .)
    IF              reduce using rule 9 (declaracion -> IF NUMERO Menor_o_igual NUMERO Dos_puntos declaraciones .)
    FOR             reduce using rule 9 (declaracion -> IF NUMERO Menor_o_igual NUMERO Dos_puntos declaraciones .)
    PRINT           reduce using rule 9 (declaracion -> IF NUMERO Menor_o_igual NUMERO Dos_puntos declaraciones .)
    VARIABLE        reduce using rule 9 (declaracion -> IF NUMERO Menor_o_igual NUMERO Dos_puntos declaraciones .)
    DEF             reduce using rule 9 (declaracion -> IF NUMERO Menor_o_igual NUMERO Dos_puntos declaraciones .)
    $end            reduce using rule 9 (declaracion -> IF NUMERO Menor_o_igual NUMERO Dos_puntos declaraciones .)


state 72

    (10) declaracion -> IF NUMERO Mayor_o_igual NUMERO Dos_puntos declaraciones .

    VAR             reduce using rule 10 (declaracion -> IF NUMERO Mayor_o_igual NUMERO Dos_puntos declaraciones .)
    IF              reduce using rule 10 (declaracion -> IF NUMERO Mayor_o_igual NUMERO Dos_puntos declaraciones .)
    FOR             reduce using rule 10 (declaracion -> IF NUMERO Mayor_o_igual NUMERO Dos_puntos declaraciones .)
    PRINT           reduce using rule 10 (declaracion -> IF NUMERO Mayor_o_igual NUMERO Dos_puntos declaraciones .)
    VARIABLE        reduce using rule 10 (declaracion -> IF NUMERO Mayor_o_igual NUMERO Dos_puntos declaraciones .)
    DEF             reduce using rule 10 (declaracion -> IF NUMERO Mayor_o_igual NUMERO Dos_puntos declaraciones .)
    $end            reduce using rule 10 (declaracion -> IF NUMERO Mayor_o_igual NUMERO Dos_puntos declaraciones .)


state 73

    (11) declaracion -> IF NUMERO igual_igual NUMERO Dos_puntos declaraciones .

    VAR             reduce using rule 11 (declaracion -> IF NUMERO igual_igual NUMERO Dos_puntos declaraciones .)
    IF              reduce using rule 11 (declaracion -> IF NUMERO igual_igual NUMERO Dos_puntos declaraciones .)
    FOR             reduce using rule 11 (declaracion -> IF NUMERO igual_igual NUMERO Dos_puntos declaraciones .)
    PRINT           reduce using rule 11 (declaracion -> IF NUMERO igual_igual NUMERO Dos_puntos declaraciones .)
    VARIABLE        reduce using rule 11 (declaracion -> IF NUMERO igual_igual NUMERO Dos_puntos declaraciones .)
    DEF             reduce using rule 11 (declaracion -> IF NUMERO igual_igual NUMERO Dos_puntos declaraciones .)
    $end            reduce using rule 11 (declaracion -> IF NUMERO igual_igual NUMERO Dos_puntos declaraciones .)


state 74

    (12) declaracion -> FOR VARIABLE IN RANGE Parentesis_apertura NUMERO . Parentesis_final Dos_puntos declaraciones

    Parentesis_final shift and go to state 76


state 75

    (22) declaracion -> DEF VARIABLE Parentesis_apertura parametros Parentesis_final Dos_puntos . declaraciones
    (1) declaraciones -> . declaracion declaraciones
    (2) declaraciones -> . declaracion
    (3) declaracion -> . VAR VARIABLE igual NUMERO Punto_y_coma
    (4) declaracion -> . VAR VARIABLE igual expresion_parentesis Punto_y_coma
    (5) declaracion -> . VAR VARIABLE igual TRUE Punto_y_coma
    (6) declaracion -> . VAR VARIABLE igual FALSE Punto_y_coma
    (7) declaracion -> . IF NUMERO Mayor_que NUMERO Dos_puntos declaraciones
    (8) declaracion -> . IF NUMERO Menor_que NUMERO Dos_puntos declaraciones
    (9) declaracion -> . IF NUMERO Menor_o_igual NUMERO Dos_puntos declaraciones
    (10) declaracion -> . IF NUMERO Mayor_o_igual NUMERO Dos_puntos declaraciones
    (11) declaracion -> . IF NUMERO igual_igual NUMERO Dos_puntos declaraciones
    (12) declaracion -> . FOR VARIABLE IN RANGE Parentesis_apertura NUMERO Parentesis_final Dos_puntos declaraciones
    (13) declaracion -> . PRINT Parentesis_apertura expresion_parentesis Parentesis_final Punto_y_coma
    (20) declaracion -> . VARIABLE Parentesis_apertura Parentesis_final Punto_y_coma
    (21) declaracion -> . VARIABLE Parentesis_apertura parametros Parentesis_final Punto_y_coma
    (22) declaracion -> . DEF VARIABLE Parentesis_apertura parametros Parentesis_final Dos_puntos declaraciones
    (23) declaracion -> . DEF VARIABLE Parentesis_apertura Parentesis_final Dos_puntos

    VAR             shift and go to state 3
    IF              shift and go to state 5
    FOR             shift and go to state 6
    PRINT           shift and go to state 7
    VARIABLE        shift and go to state 4
    DEF             shift and go to state 8

    declaraciones                  shift and go to state 77
    declaracion                    shift and go to state 2

state 76

    (12) declaracion -> FOR VARIABLE IN RANGE Parentesis_apertura NUMERO Parentesis_final . Dos_puntos declaraciones

    Dos_puntos      shift and go to state 78


state 77

    (22) declaracion -> DEF VARIABLE Parentesis_apertura parametros Parentesis_final Dos_puntos declaraciones .

    VAR             reduce using rule 22 (declaracion -> DEF VARIABLE Parentesis_apertura parametros Parentesis_final Dos_puntos declaraciones .)
    IF              reduce using rule 22 (declaracion -> DEF VARIABLE Parentesis_apertura parametros Parentesis_final Dos_puntos declaraciones .)
    FOR             reduce using rule 22 (declaracion -> DEF VARIABLE Parentesis_apertura parametros Parentesis_final Dos_puntos declaraciones .)
    PRINT           reduce using rule 22 (declaracion -> DEF VARIABLE Parentesis_apertura parametros Parentesis_final Dos_puntos declaraciones .)
    VARIABLE        reduce using rule 22 (declaracion -> DEF VARIABLE Parentesis_apertura parametros Parentesis_final Dos_puntos declaraciones .)
    DEF             reduce using rule 22 (declaracion -> DEF VARIABLE Parentesis_apertura parametros Parentesis_final Dos_puntos declaraciones .)
    $end            reduce using rule 22 (declaracion -> DEF VARIABLE Parentesis_apertura parametros Parentesis_final Dos_puntos declaraciones .)


state 78

    (12) declaracion -> FOR VARIABLE IN RANGE Parentesis_apertura NUMERO Parentesis_final Dos_puntos . declaraciones
    (1) declaraciones -> . declaracion declaraciones
    (2) declaraciones -> . declaracion
    (3) declaracion -> . VAR VARIABLE igual NUMERO Punto_y_coma
    (4) declaracion -> . VAR VARIABLE igual expresion_parentesis Punto_y_coma
    (5) declaracion -> . VAR VARIABLE igual TRUE Punto_y_coma
    (6) declaracion -> . VAR VARIABLE igual FALSE Punto_y_coma
    (7) declaracion -> . IF NUMERO Mayor_que NUMERO Dos_puntos declaraciones
    (8) declaracion -> . IF NUMERO Menor_que NUMERO Dos_puntos declaraciones
    (9) declaracion -> . IF NUMERO Menor_o_igual NUMERO Dos_puntos declaraciones
    (10) declaracion -> . IF NUMERO Mayor_o_igual NUMERO Dos_puntos declaraciones
    (11) declaracion -> . IF NUMERO igual_igual NUMERO Dos_puntos declaraciones
    (12) declaracion -> . FOR VARIABLE IN RANGE Parentesis_apertura NUMERO Parentesis_final Dos_puntos declaraciones
    (13) declaracion -> . PRINT Parentesis_apertura expresion_parentesis Parentesis_final Punto_y_coma
    (20) declaracion -> . VARIABLE Parentesis_apertura Parentesis_final Punto_y_coma
    (21) declaracion -> . VARIABLE Parentesis_apertura parametros Parentesis_final Punto_y_coma
    (22) declaracion -> . DEF VARIABLE Parentesis_apertura parametros Parentesis_final Dos_puntos declaraciones
    (23) declaracion -> . DEF VARIABLE Parentesis_apertura Parentesis_final Dos_puntos

    VAR             shift and go to state 3
    IF              shift and go to state 5
    FOR             shift and go to state 6
    PRINT           shift and go to state 7
    VARIABLE        shift and go to state 4
    DEF             shift and go to state 8

    declaraciones                  shift and go to state 79
    declaracion                    shift and go to state 2

state 79

    (12) declaracion -> FOR VARIABLE IN RANGE Parentesis_apertura NUMERO Parentesis_final Dos_puntos declaraciones .

    VAR             reduce using rule 12 (declaracion -> FOR VARIABLE IN RANGE Parentesis_apertura NUMERO Parentesis_final Dos_puntos declaraciones .)
    IF              reduce using rule 12 (declaracion -> FOR VARIABLE IN RANGE Parentesis_apertura NUMERO Parentesis_final Dos_puntos declaraciones .)
    FOR             reduce using rule 12 (declaracion -> FOR VARIABLE IN RANGE Parentesis_apertura NUMERO Parentesis_final Dos_puntos declaraciones .)
    PRINT           reduce using rule 12 (declaracion -> FOR VARIABLE IN RANGE Parentesis_apertura NUMERO Parentesis_final Dos_puntos declaraciones .)
    VARIABLE        reduce using rule 12 (declaracion -> FOR VARIABLE IN RANGE Parentesis_apertura NUMERO Parentesis_final Dos_puntos declaraciones .)
    DEF             reduce using rule 12 (declaracion -> FOR VARIABLE IN RANGE Parentesis_apertura NUMERO Parentesis_final Dos_puntos declaraciones .)
    $end            reduce using rule 12 (declaracion -> FOR VARIABLE IN RANGE Parentesis_apertura NUMERO Parentesis_final Dos_puntos declaraciones .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VAR in state 2 resolved as shift
WARNING: shift/reduce conflict for IF in state 2 resolved as shift
WARNING: shift/reduce conflict for FOR in state 2 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 2 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 2 resolved as shift
WARNING: shift/reduce conflict for DEF in state 2 resolved as shift
WARNING: shift/reduce conflict for Punto_y_coma in state 34 resolved as shift
