
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMILLA DEF Dos_puntos FALSE FOR IF IN Mayor_o_igual Mayor_que Menor_o_igual Menor_que NUMERO PRINT Parentesis_apertura Parentesis_final Punto_y_coma RANGE TRUE VAR VARIABLE coma igual igual_igual\n    declaraciones : declaracion declaraciones\n                  | declaracion\n    \n    declaracion : VAR VARIABLE igual NUMERO Punto_y_coma \n                | VAR VARIABLE igual expresion_parentesis Punto_y_coma \n                | VAR VARIABLE igual TRUE Punto_y_coma \n                | VAR VARIABLE igual FALSE Punto_y_coma \n    \n    declaracion : IF NUMERO Mayor_que NUMERO Dos_puntos declaraciones\n                | IF NUMERO Menor_que NUMERO Dos_puntos declaraciones\n                | IF NUMERO Menor_o_igual NUMERO Dos_puntos declaraciones\n                | IF NUMERO Mayor_o_igual NUMERO Dos_puntos declaraciones\n                | IF NUMERO igual_igual NUMERO Dos_puntos declaraciones\n    \n    declaracion : FOR VARIABLE IN RANGE Parentesis_apertura NUMERO Parentesis_final Dos_puntos declaraciones\n    \n    declaracion : PRINT Parentesis_apertura expresion_parentesis Parentesis_final Punto_y_coma\n    \n    expresion_parentesis : COMILLA variables COMILLA\n                        | variables\n    \n    variables : VARIABLE\n              | NUMERO\n              | variables VARIABLE\n              | variables NUMERO\n    \n    declaracion : VARIABLE Parentesis_apertura Parentesis_final Punto_y_coma\n                | VARIABLE Parentesis_apertura parametros Parentesis_final Punto_y_coma\n    \n    declaracion : DEF VARIABLE Parentesis_apertura parametros Parentesis_final Dos_puntos declaraciones\n                | DEF VARIABLE Parentesis_apertura Parentesis_final Dos_puntos\n    \n    parametros : expresion\n               | expresion coma parametros\n    \n    expresion : NUMERO\n              | VARIABLE\n    '
    
_lr_action_items = {'VAR':([0,2,9,38,53,54,55,56,57,59,60,61,62,63,65,68,69,70,71,72,73,75,77,78,79,],[3,3,-1,-20,-3,-4,-5,-6,-21,3,3,3,3,3,-13,-23,-7,-8,-9,-10,-11,3,-22,3,-12,]),'IF':([0,2,9,38,53,54,55,56,57,59,60,61,62,63,65,68,69,70,71,72,73,75,77,78,79,],[5,5,-1,-20,-3,-4,-5,-6,-21,5,5,5,5,5,-13,-23,-7,-8,-9,-10,-11,5,-22,5,-12,]),'FOR':([0,2,9,38,53,54,55,56,57,59,60,61,62,63,65,68,69,70,71,72,73,75,77,78,79,],[6,6,-1,-20,-3,-4,-5,-6,-21,6,6,6,6,6,-13,-23,-7,-8,-9,-10,-11,6,-22,6,-12,]),'PRINT':([0,2,9,38,53,54,55,56,57,59,60,61,62,63,65,68,69,70,71,72,73,75,77,78,79,],[7,7,-1,-20,-3,-4,-5,-6,-21,7,7,7,7,7,-13,-23,-7,-8,-9,-10,-11,7,-22,7,-12,]),'VARIABLE':([0,2,3,6,8,9,11,14,16,29,30,31,32,33,34,38,40,48,49,50,53,54,55,56,57,59,60,61,62,63,65,68,69,70,71,72,73,75,77,78,79,],[4,4,10,13,15,-1,17,31,31,31,49,-16,-17,17,-17,-20,17,49,-18,-19,-3,-4,-5,-6,-21,4,4,4,4,4,-13,-23,-7,-8,-9,-10,-11,4,-22,4,-12,]),'DEF':([0,2,9,38,53,54,55,56,57,59,60,61,62,63,65,68,69,70,71,72,73,75,77,78,79,],[8,8,-1,-20,-3,-4,-5,-6,-21,8,8,8,8,8,-13,-23,-7,-8,-9,-10,-11,8,-22,8,-12,]),'$end':([1,2,9,38,53,54,55,56,57,65,68,69,70,71,72,73,77,79,],[0,-2,-1,-20,-3,-4,-5,-6,-21,-13,-23,-7,-8,-9,-10,-11,-22,-12,]),'Parentesis_apertura':([4,7,15,46,],[11,14,33,64,]),'NUMERO':([5,11,14,16,22,23,24,25,26,29,30,31,32,33,34,40,48,49,50,64,],[12,21,32,34,41,42,43,44,45,32,50,-16,-17,21,-17,21,50,-18,-19,74,]),'igual':([10,],[16,]),'Parentesis_final':([11,17,19,20,21,28,30,31,32,33,49,50,51,58,66,74,],[18,-27,39,-24,-26,47,-15,-16,-17,52,-18,-19,67,-25,-14,76,]),'Mayor_que':([12,],[22,]),'Menor_que':([12,],[23,]),'Menor_o_igual':([12,],[24,]),'Mayor_o_igual':([12,],[25,]),'igual_igual':([12,],[26,]),'IN':([13,],[27,]),'COMILLA':([14,16,31,32,48,49,50,],[29,29,-16,-17,66,-18,-19,]),'TRUE':([16,],[36,]),'FALSE':([16,],[37,]),'coma':([17,20,21,],[-27,40,-26,]),'Punto_y_coma':([18,30,31,34,35,36,37,39,47,49,50,66,],[38,-15,-16,53,54,55,56,57,65,-18,-19,-14,]),'RANGE':([27,],[46,]),'Dos_puntos':([41,42,43,44,45,52,67,76,],[59,60,61,62,63,68,75,78,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaraciones':([0,2,59,60,61,62,63,75,78,],[1,9,69,70,71,72,73,77,79,]),'declaracion':([0,2,59,60,61,62,63,75,78,],[2,2,2,2,2,2,2,2,2,]),'parametros':([11,33,40,],[19,51,58,]),'expresion':([11,33,40,],[20,20,20,]),'expresion_parentesis':([14,16,],[28,35,]),'variables':([14,16,29,],[30,30,48,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> declaraciones","S'",1,None,None,None),
  ('declaraciones -> declaracion declaraciones','declaraciones',2,'p_declaraciones','ana_sintac.py',6),
  ('declaraciones -> declaracion','declaraciones',1,'p_declaraciones','ana_sintac.py',7),
  ('declaracion -> VAR VARIABLE igual NUMERO Punto_y_coma','declaracion',5,'p_declaracion','ana_sintac.py',17),
  ('declaracion -> VAR VARIABLE igual expresion_parentesis Punto_y_coma','declaracion',5,'p_declaracion','ana_sintac.py',18),
  ('declaracion -> VAR VARIABLE igual TRUE Punto_y_coma','declaracion',5,'p_declaracion','ana_sintac.py',19),
  ('declaracion -> VAR VARIABLE igual FALSE Punto_y_coma','declaracion',5,'p_declaracion','ana_sintac.py',20),
  ('declaracion -> IF NUMERO Mayor_que NUMERO Dos_puntos declaraciones','declaracion',6,'p_condicional_if','ana_sintac.py',27),
  ('declaracion -> IF NUMERO Menor_que NUMERO Dos_puntos declaraciones','declaracion',6,'p_condicional_if','ana_sintac.py',28),
  ('declaracion -> IF NUMERO Menor_o_igual NUMERO Dos_puntos declaraciones','declaracion',6,'p_condicional_if','ana_sintac.py',29),
  ('declaracion -> IF NUMERO Mayor_o_igual NUMERO Dos_puntos declaraciones','declaracion',6,'p_condicional_if','ana_sintac.py',30),
  ('declaracion -> IF NUMERO igual_igual NUMERO Dos_puntos declaraciones','declaracion',6,'p_condicional_if','ana_sintac.py',31),
  ('declaracion -> FOR VARIABLE IN RANGE Parentesis_apertura NUMERO Parentesis_final Dos_puntos declaraciones','declaracion',9,'p_bucle_for','ana_sintac.py',38),
  ('declaracion -> PRINT Parentesis_apertura expresion_parentesis Parentesis_final Punto_y_coma','declaracion',5,'p_print','ana_sintac.py',45),
  ('expresion_parentesis -> COMILLA variables COMILLA','expresion_parentesis',3,'p_expresion_parentesis','ana_sintac.py',52),
  ('expresion_parentesis -> variables','expresion_parentesis',1,'p_expresion_parentesis','ana_sintac.py',53),
  ('variables -> VARIABLE','variables',1,'p_variables','ana_sintac.py',62),
  ('variables -> NUMERO','variables',1,'p_variables','ana_sintac.py',63),
  ('variables -> variables VARIABLE','variables',2,'p_variables','ana_sintac.py',64),
  ('variables -> variables NUMERO','variables',2,'p_variables','ana_sintac.py',65),
  ('declaracion -> VARIABLE Parentesis_apertura Parentesis_final Punto_y_coma','declaracion',4,'p_function_call','ana_sintac.py',78),
  ('declaracion -> VARIABLE Parentesis_apertura parametros Parentesis_final Punto_y_coma','declaracion',5,'p_function_call','ana_sintac.py',79),
  ('declaracion -> DEF VARIABLE Parentesis_apertura parametros Parentesis_final Dos_puntos declaraciones','declaracion',7,'p_funcion','ana_sintac.py',89),
  ('declaracion -> DEF VARIABLE Parentesis_apertura Parentesis_final Dos_puntos','declaracion',5,'p_funcion','ana_sintac.py',90),
  ('parametros -> expresion','parametros',1,'p_parametros','ana_sintac.py',99),
  ('parametros -> expresion coma parametros','parametros',3,'p_parametros','ana_sintac.py',100),
  ('expresion -> NUMERO','expresion',1,'p_expresion','ana_sintac.py',109),
  ('expresion -> VARIABLE','expresion',1,'p_expresion','ana_sintac.py',110),
]
