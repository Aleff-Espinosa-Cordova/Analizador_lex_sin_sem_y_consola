
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMILLA DEF Dos_puntos FALSE FOR IF IN Mayor_o_igual Mayor_que Menor_o_igual Menor_que NUMERO PRINT Parentesis_apertura Parentesis_final Punto_y_coma RANGE TRUE VAR VARIABLE coma igual igual_igual\n    declaraciones : declaracion declaraciones\n                  | declaracion\n    \n    declaracion : VAR VARIABLE igual NUMERO Punto_y_coma\n                | VAR VARIABLE igual COMILLA VARIABLE COMILLA Punto_y_coma\n                | VAR VARIABLE igual TRUE Punto_y_coma\n                | VAR VARIABLE igual FALSE Punto_y_coma\n    \n    declaracion : IF NUMERO Mayor_que NUMERO Dos_puntos declaraciones\n                | IF NUMERO Menor_que NUMERO Dos_puntos declaraciones\n                | IF NUMERO Menor_o_igual NUMERO Dos_puntos declaraciones\n                | IF NUMERO Mayor_o_igual NUMERO Dos_puntos declaraciones\n                | IF NUMERO igual_igual NUMERO Dos_puntos declaraciones\n    \n    declaracion : FOR VARIABLE IN RANGE Parentesis_apertura NUMERO Parentesis_final Dos_puntos declaraciones\n    \n    declaracion : PRINT Parentesis_apertura expresion_parentesis Parentesis_final Punto_y_coma\n    \n    expresion_parentesis : COMILLA variables COMILLA\n                        | variables\n    \n    variables : VARIABLE\n              | variables VARIABLE\n    \n    declaracion : VARIABLE Parentesis_apertura Parentesis_final Punto_y_coma\n                | VARIABLE Parentesis_apertura parametros Parentesis_final Punto_y_coma\n    \n    declaracion : DEF VARIABLE Parentesis_apertura parametros Parentesis_final Dos_puntos declaraciones\n                | DEF VARIABLE Parentesis_apertura Parentesis_final Dos_puntos\n    \n    parametros : expresion\n               | expresion coma parametros\n    \n    expresion : NUMERO\n              | VARIABLE\n    '
    
_lr_action_items = {'VAR':([0,2,9,37,51,53,54,55,57,58,59,60,61,63,66,68,69,70,71,72,74,75,77,78,79,],[3,3,-1,-18,-3,-5,-6,-19,3,3,3,3,3,-13,-21,-7,-8,-9,-10,-11,3,-4,-20,3,-12,]),'IF':([0,2,9,37,51,53,54,55,57,58,59,60,61,63,66,68,69,70,71,72,74,75,77,78,79,],[5,5,-1,-18,-3,-5,-6,-19,5,5,5,5,5,-13,-21,-7,-8,-9,-10,-11,5,-4,-20,5,-12,]),'FOR':([0,2,9,37,51,53,54,55,57,58,59,60,61,63,66,68,69,70,71,72,74,75,77,78,79,],[6,6,-1,-18,-3,-5,-6,-19,6,6,6,6,6,-13,-21,-7,-8,-9,-10,-11,6,-4,-20,6,-12,]),'PRINT':([0,2,9,37,51,53,54,55,57,58,59,60,61,63,66,68,69,70,71,72,74,75,77,78,79,],[7,7,-1,-18,-3,-5,-6,-19,7,7,7,7,7,-13,-21,-7,-8,-9,-10,-11,7,-4,-20,7,-12,]),'VARIABLE':([0,2,3,6,8,9,11,14,29,30,31,32,34,37,39,47,48,51,53,54,55,57,58,59,60,61,63,66,68,69,70,71,72,74,75,77,78,79,],[4,4,10,13,15,-1,17,31,31,48,-16,17,52,-18,17,48,-17,-3,-5,-6,-19,4,4,4,4,4,-13,-21,-7,-8,-9,-10,-11,4,-4,-20,4,-12,]),'DEF':([0,2,9,37,51,53,54,55,57,58,59,60,61,63,66,68,69,70,71,72,74,75,77,78,79,],[8,8,-1,-18,-3,-5,-6,-19,8,8,8,8,8,-13,-21,-7,-8,-9,-10,-11,8,-4,-20,8,-12,]),'$end':([1,2,9,37,51,53,54,55,63,66,68,69,70,71,72,75,77,79,],[0,-2,-1,-18,-3,-5,-6,-19,-13,-21,-7,-8,-9,-10,-11,-4,-20,-12,]),'Parentesis_apertura':([4,7,15,45,],[11,14,32,62,]),'NUMERO':([5,11,16,22,23,24,25,26,32,39,62,],[12,21,33,40,41,42,43,44,21,21,73,]),'igual':([10,],[16,]),'Parentesis_final':([11,17,19,20,21,28,30,31,32,48,49,56,64,73,],[18,-25,38,-22,-24,46,-15,-16,50,-17,65,-23,-14,76,]),'Mayor_que':([12,],[22,]),'Menor_que':([12,],[23,]),'Menor_o_igual':([12,],[24,]),'Mayor_o_igual':([12,],[25,]),'igual_igual':([12,],[26,]),'IN':([13,],[27,]),'COMILLA':([14,16,31,47,48,52,],[29,34,-16,64,-17,67,]),'TRUE':([16,],[35,]),'FALSE':([16,],[36,]),'coma':([17,20,21,],[-25,39,-24,]),'Punto_y_coma':([18,33,35,36,38,46,67,],[37,51,53,54,55,63,75,]),'RANGE':([27,],[45,]),'Dos_puntos':([40,41,42,43,44,50,65,76,],[57,58,59,60,61,66,74,78,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaraciones':([0,2,57,58,59,60,61,74,78,],[1,9,68,69,70,71,72,77,79,]),'declaracion':([0,2,57,58,59,60,61,74,78,],[2,2,2,2,2,2,2,2,2,]),'parametros':([11,32,39,],[19,49,56,]),'expresion':([11,32,39,],[20,20,20,]),'expresion_parentesis':([14,],[28,]),'variables':([14,29,],[30,47,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> declaraciones","S'",1,None,None,None),
  ('declaraciones -> declaracion declaraciones','declaraciones',2,'p_declaraciones','ana_sintac.py',6),
  ('declaraciones -> declaracion','declaraciones',1,'p_declaraciones','ana_sintac.py',7),
  ('declaracion -> VAR VARIABLE igual NUMERO Punto_y_coma','declaracion',5,'p_declaracion','ana_sintac.py',17),
  ('declaracion -> VAR VARIABLE igual COMILLA VARIABLE COMILLA Punto_y_coma','declaracion',7,'p_declaracion','ana_sintac.py',18),
  ('declaracion -> VAR VARIABLE igual TRUE Punto_y_coma','declaracion',5,'p_declaracion','ana_sintac.py',19),
  ('declaracion -> VAR VARIABLE igual FALSE Punto_y_coma','declaracion',5,'p_declaracion','ana_sintac.py',20),
  ('declaracion -> IF NUMERO Mayor_que NUMERO Dos_puntos declaraciones','declaracion',6,'p_condicional_if','ana_sintac.py',27),
  ('declaracion -> IF NUMERO Menor_que NUMERO Dos_puntos declaraciones','declaracion',6,'p_condicional_if','ana_sintac.py',28),
  ('declaracion -> IF NUMERO Menor_o_igual NUMERO Dos_puntos declaraciones','declaracion',6,'p_condicional_if','ana_sintac.py',29),
  ('declaracion -> IF NUMERO Mayor_o_igual NUMERO Dos_puntos declaraciones','declaracion',6,'p_condicional_if','ana_sintac.py',30),
  ('declaracion -> IF NUMERO igual_igual NUMERO Dos_puntos declaraciones','declaracion',6,'p_condicional_if','ana_sintac.py',31),
  ('declaracion -> FOR VARIABLE IN RANGE Parentesis_apertura NUMERO Parentesis_final Dos_puntos declaraciones','declaracion',9,'p_bucle_for','ana_sintac.py',38),
  ('declaracion -> PRINT Parentesis_apertura expresion_parentesis Parentesis_final Punto_y_coma','declaracion',5,'p_print','ana_sintac.py',45),
  ('expresion_parentesis -> COMILLA variables COMILLA','expresion_parentesis',3,'p_expresion_parentesis','ana_sintac.py',51),
  ('expresion_parentesis -> variables','expresion_parentesis',1,'p_expresion_parentesis','ana_sintac.py',52),
  ('variables -> VARIABLE','variables',1,'p_variables','ana_sintac.py',61),
  ('variables -> variables VARIABLE','variables',2,'p_variables','ana_sintac.py',62),
  ('declaracion -> VARIABLE Parentesis_apertura Parentesis_final Punto_y_coma','declaracion',4,'p_function_call','ana_sintac.py',74),
  ('declaracion -> VARIABLE Parentesis_apertura parametros Parentesis_final Punto_y_coma','declaracion',5,'p_function_call','ana_sintac.py',75),
  ('declaracion -> DEF VARIABLE Parentesis_apertura parametros Parentesis_final Dos_puntos declaraciones','declaracion',7,'p_funcion','ana_sintac.py',85),
  ('declaracion -> DEF VARIABLE Parentesis_apertura Parentesis_final Dos_puntos','declaracion',5,'p_funcion','ana_sintac.py',86),
  ('parametros -> expresion','parametros',1,'p_parametros','ana_sintac.py',95),
  ('parametros -> expresion coma parametros','parametros',3,'p_parametros','ana_sintac.py',96),
  ('expresion -> NUMERO','expresion',1,'p_expresion','ana_sintac.py',105),
  ('expresion -> VARIABLE','expresion',1,'p_expresion','ana_sintac.py',106),
]
